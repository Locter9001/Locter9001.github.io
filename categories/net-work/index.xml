<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>net work on locter</title>
        <link>https://Locter9001.github.io/categories/net-work/</link>
        <description>Recent content in net work on locter</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 13 Mar 2022 12:19:27 +0800</lastBuildDate><atom:link href="https://Locter9001.github.io/categories/net-work/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>计算机网络学习</title>
        <link>https://Locter9001.github.io/p/network/</link>
        <pubDate>Sun, 13 Mar 2022 12:19:27 +0800</pubDate>
        
        <guid>https://Locter9001.github.io/p/network/</guid>
        <description>&lt;img src="https://locter-picture.oss-cn-beijing.aliyuncs.com/cover-900-1.jpg" alt="Featured image of post 计算机网络学习" /&gt;&lt;h1 id=&#34;计算机网络&#34;&gt;计算机网络&lt;/h1&gt;
&lt;h2 id=&#34;计算机网络的分类&#34;&gt;计算机网络的分类&lt;/h2&gt;
&lt;h3 id=&#34;按交换技术分类&#34;&gt;按交换技术分类&lt;/h3&gt;
&lt;h4 id=&#34;电路交换网络&#34;&gt;电路交换网络&lt;/h4&gt;
&lt;h4 id=&#34;报文交换网络&#34;&gt;报文交换网络&lt;/h4&gt;
&lt;p&gt;交换机只有在&lt;strong&gt;接收完报文&lt;/strong&gt;之后才会进行转发&lt;/p&gt;
&lt;h4 id=&#34;分组交换网络&#34;&gt;分组交换网络&lt;/h4&gt;
&lt;p&gt;将数据分组逐步转发，各分组可以由不同链路转发。&lt;/p&gt;
&lt;h3 id=&#34;按使用者分类&#34;&gt;按使用者分类&lt;/h3&gt;
&lt;h4 id=&#34;公用网&#34;&gt;公用网&lt;/h4&gt;
&lt;h4 id=&#34;专用网&#34;&gt;专用网&lt;/h4&gt;
&lt;h3 id=&#34;按传输介质分类&#34;&gt;按传输介质分类&lt;/h3&gt;
&lt;h4 id=&#34;有线网络&#34;&gt;有线网络&lt;/h4&gt;
&lt;h4 id=&#34;无线网络&#34;&gt;无线网络&lt;/h4&gt;
&lt;h3 id=&#34;按覆盖范围分类&#34;&gt;按覆盖范围分类&lt;/h3&gt;
&lt;h4 id=&#34;广域网-wan&#34;&gt;广域网 WAN&lt;/h4&gt;
&lt;p&gt;因特网核心，覆盖范围极广，可横跨国家乃至州&lt;/p&gt;
&lt;h4 id=&#34;城域网-man&#34;&gt;城域网 MAN&lt;/h4&gt;
&lt;p&gt;城市骨干网&lt;/p&gt;
&lt;h4 id=&#34;局域网-lan&#34;&gt;局域网 LAN&lt;/h4&gt;
&lt;p&gt;一般用微型计算机或工作站通过高速通信线路相连，速率通常在10Mbit/s 范围较小&lt;/p&gt;
&lt;h4 id=&#34;个域网-pan&#34;&gt;个域网 PAN&lt;/h4&gt;
&lt;p&gt;个人使用的网络，如智能手表，无线耳机，无线鼠标键盘等，覆盖范围大约为十米&lt;/p&gt;
&lt;h3 id=&#34;按拓扑结构分类&#34;&gt;按拓扑结构分类&lt;/h3&gt;
&lt;h4 id=&#34;总线型网络&#34;&gt;总线型网络&lt;/h4&gt;
&lt;p&gt;使用单根传输线把计算机连接起来，&lt;/p&gt;
&lt;p&gt;优点：是建网容易，增减节点方便，节省线路&lt;/p&gt;
&lt;p&gt;缺点：重负载时通信效率不高，总线任意一处出现故障，则全网瘫痪&lt;/p&gt;
&lt;h4 id=&#34;星型网络&#34;&gt;星型网络&lt;/h4&gt;
&lt;p&gt;将每个计算机都以单独的线路与中央设备相连，中央设备早期是计算机，后来是集线器，现在一般是交换机或路由器&lt;/p&gt;
&lt;p&gt;优点：便于网络集中控制和管理&lt;/p&gt;
&lt;p&gt;缺点：成本高，中央设备对故障敏感&lt;/p&gt;
&lt;h4 id=&#34;环形网络&#34;&gt;环形网络&lt;/h4&gt;
&lt;p&gt;将所有计算机的网络接口连接成一个环，详见令牌环局域网，环可以是单环也可以是双环，环中信号是单向传输。&lt;/p&gt;
&lt;h4 id=&#34;网状型网络&#34;&gt;网状型网络&lt;/h4&gt;
&lt;p&gt;一般情况下，每个节点至少由两条路径与其他节点相连，多用在广域网(WAN)中&lt;/p&gt;
&lt;p&gt;优点：可靠性高&lt;/p&gt;
&lt;p&gt;缺点：控制复杂，线路成本高&lt;/p&gt;
&lt;h2 id=&#34;计算机网络的性能指标&#34;&gt;计算机网络的性能指标&lt;/h2&gt;
&lt;h3 id=&#34;比特-bit&#34;&gt;&lt;strong&gt;比特 bit&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;bit 是数据量的单位&lt;/p&gt;
&lt;p&gt;常用数据量单位：&lt;/p&gt;
&lt;p&gt;8bit = 1Byte = 1字节&lt;/p&gt;
&lt;p&gt;KB = 2¹⁰ B&lt;/p&gt;
&lt;p&gt;MB = K · KB = 2¹⁰ · 2¹⁰ B = 2²⁰ B&lt;/p&gt;
&lt;p&gt;GB = K · MB = 2¹⁰ · 2²⁰ B = 2³⁰ B&lt;/p&gt;
&lt;h3 id=&#34;速率&#34;&gt;速率&lt;/h3&gt;
&lt;p&gt;常用单位： bit/s (b/s, bps)&lt;/p&gt;
&lt;h3 id=&#34;带宽&#34;&gt;带宽&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;带宽在模拟信号系统中的意义&lt;/strong&gt;：信号所包含的各种不同频率成分所占据的频率范围；&lt;/p&gt;
&lt;p&gt;单位： Hz（kHz，MHz，GHz）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;带宽在计算机网络中的意义&lt;/strong&gt; 用来表示网络的通信线路所能传送数据的能力，因此网络带宽表示在单位时间内从网络中的某一点到另一点所能通过的“最高数据率”；&lt;/p&gt;
&lt;p&gt;单位： b/s （kb/s，Mb/s，Gb/s，Tb/s）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;“带宽” 的这两种表述之间有着密切的联系，一条通信线路的“频带宽度” 越宽，其所传输数据的“最高数据率”也越高&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;吞吐量&#34;&gt;吞吐量&lt;/h3&gt;
&lt;p&gt;吞吐量表示在&lt;strong&gt;单位时间内通过某个网络（或信道、接口）的数据量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;吞吐量被经常用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能够通过网络&lt;/p&gt;
&lt;p&gt;吞吐量受&lt;strong&gt;网络带宽或额定速率的限制&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;时延&#34;&gt;时延&lt;/h3&gt;
&lt;h4 id=&#34;发送时延&#34;&gt;发送时延&lt;/h4&gt;
&lt;p&gt;数据在发送时的延迟&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;计算公式：分组长度（b）/ 发送速率（b/s）&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;传播时延&#34;&gt;传播时延&lt;/h4&gt;
&lt;p&gt;数据传播到各节点或终点时的延迟&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;计算公式：信道长度（m）/	电磁波传播速率（m/s）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;电磁波传播速率常用导体：&lt;/p&gt;
&lt;p&gt;自由空间： 3 * 10⁸  m/s&lt;/p&gt;
&lt;p&gt;铜线：2.3 * 10⁸  m/s&lt;/p&gt;
&lt;p&gt;光纤：2.0 * 10⁸  m/s&lt;/p&gt;
&lt;h4 id=&#34;处理时延&#34;&gt;处理时延&lt;/h4&gt;
&lt;p&gt;数据到达各节点并转发处理时的延迟，不方便计算具体延迟&lt;/p&gt;
&lt;h4 id=&#34;小结&#34;&gt;小结&lt;/h4&gt;
&lt;p&gt;报文交换总时间 = 报文的发送时延 * 链路&lt;/p&gt;
&lt;p&gt;分组交换总时间 = 报文的发送时延 * 1个分组的发送时延&lt;/p&gt;
&lt;h3 id=&#34;时延带宽积&#34;&gt;时延带宽积&lt;/h3&gt;
&lt;p&gt;时延带宽积 = 传播时延 * 带宽&lt;/p&gt;
&lt;p&gt;若发送端连续发送数据，则在所发送的第一个比特即将到达终点时，发送端就已经发送了时延带宽积个比特；&lt;/p&gt;
&lt;p&gt;链路的时延带宽积又称为&lt;strong&gt;以比特为单位的链路长度&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;往返时间&#34;&gt;往返时间&lt;/h3&gt;
&lt;p&gt;在许多情况下，因特网上的信息不仅仅单方向传输，而是双向交互；&lt;/p&gt;
&lt;p&gt;我们有时很需要知道双向交互一次所需的时间；&lt;/p&gt;
&lt;p&gt;因此，往返时间RTT（round-trip time）也是一个重要的性能指标&lt;/p&gt;
&lt;h3 id=&#34;利用率&#34;&gt;利用率&lt;/h3&gt;
&lt;p&gt;利用率分 &lt;strong&gt;信道利用率&lt;/strong&gt;和&lt;strong&gt;网络利用率&lt;/strong&gt;两种&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;信道利用率&lt;/strong&gt;：用来表示某信道有百分之几的时间是被利用的（有数据通过）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;网络利用率&lt;/strong&gt;: 全网络的信道利用率的加权平均&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;根据排队论，当某信道的利用率增大时，该信道引起的时延也会迅速增加；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因此，信道利用率并非越高越好；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果令 D0 表示网络空闲时的时延，D表示网络当前的时延，那么在适当的假定条件下，可以用下面的简单公式来表示D、D0和利用率U之间的关系：&lt;/p&gt;
&lt;p&gt;​		D = D0 / 1-U ；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当网络利用率到达 50%时，时延就要加倍；&lt;/li&gt;
&lt;li&gt;当网络利用率超过 50%时，时延急剧增大；&lt;/li&gt;
&lt;li&gt;当网络利用率接近 100%时，时延就趋于无穷大；&lt;/li&gt;
&lt;li&gt;因此，一些拥有较大主干网的ISP通常会控制它们的信道利用率不超过50%，如果超过了，就要准备扩容，增大线路的带宽。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;也不能是信道利用率太低，这会使宝贵的通信资源被白白浪费。应该使用一些机制，可以根据情况动态调整输入到网络中的通信量，使网络利用率保持在一个合理的范围内&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;丢包率&#34;&gt;丢包率&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;丢包率即分组丢失率，是指在一定的时间范围内，传输过程中&lt;strong&gt;丢失的分组数量与总分组数量的比率&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;丢包率具体可分为接口丢包率、结点丢包率、链路丢包率、路径丢包率、网络丢包率等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;丢包率时网络运维人员非常关心的一个网络性能指标，但对于普通用户来说往往并不关心这个指标，因为他们通常意识不到网络丢包。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分组丢失主要有两种情况&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;分组在传输过程中出现&lt;strong&gt;误码&lt;/strong&gt;，被节点丢弃；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分组到达一台队列已满的分组交换机时被丢弃；&lt;/p&gt;
&lt;p&gt;在通信量较大时就可能造成网络拥塞。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因此，丢包率反应了网络的拥塞情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无拥塞时路径丢包率为0%&lt;/li&gt;
&lt;li&gt;轻度拥塞时路径丢包率为 1% ~ 4%&lt;/li&gt;
&lt;li&gt;严重拥塞时路径丢包率为 5% ~ 15%&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;计算机网络体系结构&#34;&gt;计算机网络体系结构&lt;/h2&gt;
&lt;h3 id=&#34;常见的计算机网络体系结构&#34;&gt;常见的计算机网络体系结构&lt;/h3&gt;
&lt;h4 id=&#34;osi体系结构&#34;&gt;&lt;strong&gt;OSI体系结构&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;是法律上的国际标准，不可靠！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/OSI-model.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;tcpip-体系结构&#34;&gt;TCP/IP 体系结构&lt;/h4&gt;
&lt;p&gt;事实上的国际标准 生活中经常使用的&lt;/p&gt;
&lt;p&gt;IP协议直接&lt;strong&gt;为ICMP协议提供服务&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PPP协议属于TCP/IP体系结构网络接口层，它可以直接&lt;strong&gt;为IP协议提供服务。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/TCPIP-model.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;原理体系结构&#34;&gt;原理体系结构&lt;/h4&gt;
&lt;p&gt;结合上述体系的优点 适合教学&lt;/p&gt;
&lt;h3 id=&#34;计算机网络体系结构分层的必要性&#34;&gt;计算机网络体系结构分层的必要性&lt;/h3&gt;
&lt;h4 id=&#34;1物理层&#34;&gt;1.物理层&lt;/h4&gt;
&lt;p&gt;​	解决使用何种信号来传输比特的问题&lt;/p&gt;
&lt;h4 id=&#34;2数据链路层&#34;&gt;2.数据链路层&lt;/h4&gt;
&lt;p&gt;​	解决分组在一个网络（或一段链路）上传输的问题&lt;/p&gt;
&lt;h4 id=&#34;3网络层&#34;&gt;3.网络层&lt;/h4&gt;
&lt;p&gt;​	解决分组在多个网络上传输（路由）的问题&lt;/p&gt;
&lt;h4 id=&#34;4运输层&#34;&gt;4.运输层&lt;/h4&gt;
&lt;p&gt;​	解决进程之间基于网络的通信问题&lt;/p&gt;
&lt;h4 id=&#34;5应用层&#34;&gt;5.应用层&lt;/h4&gt;
&lt;p&gt;​	解决通过应用进程的交互来实现特定网络应用的问题&lt;/p&gt;
&lt;h3 id=&#34;计算机网络体系结构中的专用术语&#34;&gt;计算机网络体系结构中的专用术语&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;实体&lt;/strong&gt; 任何可发送或接收信息的硬件或软件进程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对等实体&lt;/strong&gt; 收发双方相同层次中的实体。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协议&lt;/strong&gt; 控制两个对等实体进行逻辑通信的规则的集合。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协议的三要素&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;语法&lt;/strong&gt; 定义所交换信息的格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;语义&lt;/strong&gt; 定义收发双方所要完成的操作&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同步&lt;/strong&gt; 定义收发双方的时序关系&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;服务&lt;/strong&gt; 在协议的控制下，两个对等实体间的逻辑通信使得本层能够向上一层提供服务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要实现本层协议，还需要使用下面一层所提供的服务&lt;/li&gt;
&lt;li&gt;协议是 “水平的”，服务是 “垂直的”。&lt;/li&gt;
&lt;li&gt;实体看得见相邻下层所提供的服务，但并不知道实现该服务的具体协议，也就是说，下面的协议对上面的实体是透明的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;服务访问点&lt;/strong&gt; 在同一系统中相邻两层实体交换信息的逻辑接口，用于区分不同的服务类型。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务原语&lt;/strong&gt; 上层使用下层所提供的服务必须通过与下层交换一些命令，这些命令称为服务原语。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;协议数据单元PDU&lt;/strong&gt; 对等层次之间传输的数据包称为该层的协议数据单元。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;服务数据单元SDU&lt;/strong&gt; 同一系统内，层与层之间交换的数据包称为服务数据单元。&lt;/p&gt;
&lt;h1 id=&#34;物理层&#34;&gt;物理层&lt;/h1&gt;
&lt;h2 id=&#34;物理层的基本概念&#34;&gt;物理层的基本概念&lt;/h2&gt;
&lt;p&gt;​		解决在各种传输媒体上传输比特0和1的问题，进而给数据链路层提供透明传输比特流的服务。所谓透明是指数据链路层看不见也无需看见物理层究竟使用的是什么方法来传输比特0和1的。只管享受物理层提供的比特流传输服务即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重点：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;物理层考虑的是怎样才能在连接各种计算机的传输媒体上传输数据比特流。&lt;/li&gt;
&lt;li&gt;物理层为数据链路层屏蔽了各种传输媒体的差异，使数据链路层只需要考虑如何完成本层协议和服务，而不必考虑网络具体的传输媒体是什么。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;物理层为了解决在各种传输媒体上传输比特0和1的问题，主要有以下四个任务：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;机械特性：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	指明接口所用的接线器的&lt;strong&gt;形状和尺寸，引脚数目和排列，固定和锁定装置&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;电气特性：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	指明在接口电缆的各条线上出现的&lt;strong&gt;电压的范围&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;功能特性：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	指明某条线上出现的某一电平的&lt;strong&gt;电压表示何种意义&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;过程特性&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;​	指明对于不同功能的各种可能的&lt;strong&gt;事件的出现顺序&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（ 由于传输媒体的种类众多，例如双绞线、光纤等。物理连接方式也很多，例如点对点连接、广播连接等。因此物理层协议种类就比较多，每种物理层协议都包含了上述四个任务的具体内容 ）&lt;/p&gt;
&lt;h3 id=&#34;导引型传输媒体&#34;&gt;导引型传输媒体&lt;/h3&gt;
&lt;h4 id=&#34;同轴电缆&#34;&gt;同轴电缆&lt;/h4&gt;
&lt;p&gt;基带同轴电缆（50Ω）：数字传输，过去用于局域网。&lt;/p&gt;
&lt;p&gt;宽带同轴电缆（75Ω）：模拟传输，目前主要用于有线电视。&lt;/p&gt;
&lt;h4 id=&#34;双绞线&#34;&gt;双绞线&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/UTP%e7%94%b5%e7%bc%86.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;光纤&#34;&gt;光纤&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%85%89%e7%ba%a4.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%85%89%e7%ba%a42.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;电力线&#34;&gt;电力线&lt;/h5&gt;
&lt;p&gt;最早的的方式&lt;/p&gt;
&lt;h3 id=&#34;非导引型传输媒体&#34;&gt;非导引型传输媒体&lt;/h3&gt;
&lt;h5 id=&#34;无线电波&#34;&gt;无线电波&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e6%97%a0%e7%ba%bf%e7%94%b5%e6%b3%a2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;微波&#34;&gt;微波&lt;/h5&gt;
&lt;p&gt;列如使用 2.4GHz 和 5.8GHz 频段的WI-FI&lt;/p&gt;
&lt;h5 id=&#34;红外线&#34;&gt;红外线&lt;/h5&gt;
&lt;p&gt;点对点无线传输&lt;/p&gt;
&lt;p&gt;直线传输，中间不能有障碍物，传输距离短&lt;/p&gt;
&lt;p&gt;传输速率低（4Mb/s~16Mb/s）&lt;/p&gt;
&lt;h5 id=&#34;可见光&#34;&gt;可见光&lt;/h5&gt;
&lt;p&gt;通过高速调制光的开关来通讯&lt;/p&gt;
&lt;h2 id=&#34;传输方式&#34;&gt;传输方式&lt;/h2&gt;
&lt;h4 id=&#34;串行传输--并行传输&#34;&gt;串行传输 &amp;amp;&amp;amp; 并行传输&lt;/h4&gt;
&lt;h5 id=&#34;串行传输&#34;&gt;串行传输&lt;/h5&gt;
&lt;p&gt;一个比特一个比特的传输数据&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e4%b8%b2%e8%a1%8c%e4%bc%a0%e8%be%931.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e4%b8%b2%e8%a1%8c%e4%bc%a0%e8%be%93.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;并行传输&#34;&gt;并行传输&lt;/h5&gt;
&lt;p&gt;一次发送n个比特而不是一个比特，因此在发送端和接收端之间需要有n条线路&lt;/p&gt;
&lt;p&gt;例如硬件里的CPU和内存&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%b9%b6%e8%a1%8c%e4%bc%a0%e8%be%931.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%b9%b6%e8%a1%8c%e4%bc%a0%e8%be%93.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;同步传输--异步传输&#34;&gt;同步传输 &amp;amp;&amp;amp; 异步传输&lt;/h4&gt;
&lt;h5 id=&#34;同步传输&#34;&gt;同步传输&lt;/h5&gt;
&lt;p&gt;数据块以稳定的比特流的形式传输，字节之间没有间隔。&lt;/p&gt;
&lt;p&gt;接收端在每个比特信号的中间时刻进行检测，以判别接收到的是比特0还是比特1.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%90%8c%e6%ad%a5%e4%bc%a0%e8%be%93.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;异步传输&#34;&gt;异步传输&lt;/h5&gt;
&lt;p&gt;以字节为独立的传输单位，字节之间的时间间隔不是固定的。接收端仅在每个字节的起始处对字节内的比特实现同步，为此 通常要在每个字节前后分别加上起始位和结束位。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%bc%82%e6%ad%a5%e4%bc%a0%e8%be%93.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;单工--半双工--全双工&#34;&gt;单工 &amp;amp;&amp;amp; 半双工 &amp;amp;&amp;amp; 全双工&lt;/h4&gt;
&lt;h5 id=&#34;单工&#34;&gt;单工&lt;/h5&gt;
&lt;p&gt;又称为单向通信，只需要一条信道。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通信双方只有一个数据传输方向&lt;/strong&gt;，例如无线电广播就是采用这种方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%8d%95%e5%b7%a5%e9%80%9a%e4%bf%a1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;半双工&#34;&gt;半双工&lt;/h5&gt;
&lt;p&gt;又称为双向交替通信，需要两条信道，一条接收一条发送。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通信双方可以相互传输数据，但不能同时进行&lt;/strong&gt;。例如对讲机就是采用这种方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%8d%8a%e5%8f%8c%e5%b7%a5%e9%80%9a%e4%bf%a1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;全双工&#34;&gt;全双工&lt;/h5&gt;
&lt;p&gt;又称为双向同时通信，需要两条信道，一条接收一条发送。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通信双方可以同时发送和接收信息&lt;/strong&gt;。例如电话采用的就是这种方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%85%a8%e5%8f%8c%e5%b7%a5%e9%80%9a%e4%bf%a1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;编码与调制&#34;&gt;编码与调制&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e7%bc%96%e7%a0%81%e4%b8%8e%e8%b0%83%e5%88%b6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;常用编码&#34;&gt;常用编码&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;不归零编码&lt;/strong&gt;（存在同步问题）&lt;/p&gt;
&lt;p&gt;又称不归零编码NRZ：&lt;/p&gt;
&lt;p&gt;1.整个码元事件内电平不发生变化&lt;/p&gt;
&lt;p&gt;2.需要额外的传输线来传输时钟信号&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;归零编码&lt;/strong&gt; （自同步，编码效率低）&lt;/p&gt;
&lt;p&gt;又称归零编码RZ：&lt;/p&gt;
&lt;p&gt;每个马原传输结束后信号都要 “ 归零 ”，所以接收方只需要在信号归零后进行采样即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;曼彻斯特编码&lt;/strong&gt;（传统以太网，10Mb/s）&lt;/p&gt;
&lt;p&gt;1.码元中间时刻的跳变即表示时钟，又表示时间。&lt;/p&gt;
&lt;p&gt;2.正/负 跳变表示1/0可以自行定义。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;差分曼彻斯特编码&lt;/strong&gt;（比曼彻斯特编码变化少，更适合较高的传输速率）&lt;/p&gt;
&lt;p&gt;1.跳变仅表示时钟。&lt;/p&gt;
&lt;p&gt;2.马原开始处电平是否发生变化表示数据，发生变化表示0，不发生变化表示1。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（小知识： log₂ N	可得出每个码元可以携带的比特量	|	N ： 相位数）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%b8%b8%e7%94%a8%e7%bc%96%e7%a0%81.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;调制&#34;&gt;调制&lt;/h3&gt;
&lt;h4 id=&#34;基本调制方法&#34;&gt;基本调制方法&lt;/h4&gt;
&lt;p&gt;使用基本调制方法，一个码元只能包含一个比特信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%9f%ba%e6%9c%ac%e8%b0%83%e5%88%b6%e6%96%b9%e6%b3%95.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;混合调制方法&#34;&gt;混合调制方法&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e6%b7%b7%e5%90%88%e8%b0%83%e5%88%b6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;信道的极限容量&#34;&gt;信道的极限容量&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e4%bf%a1%e9%81%93%e5%ae%b9%e9%87%8f1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;奈氏准则&#34;&gt;奈氏准则&lt;/h3&gt;
&lt;p&gt;在假定的理想条件下，&lt;strong&gt;为了避免码间串扰，码元传输速率是有上限的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;理想低通信道的最高码元传输速率 = 2W Baud = 2W 码元/秒&lt;/p&gt;
&lt;p&gt;理想带通信道的最高码元传输速率 = W Baud	= W 码元/秒&lt;/p&gt;
&lt;p&gt;​			W : 信道宽带（单位为Hz）&lt;/p&gt;
&lt;p&gt;​			Baud : 波特，即码元/秒&lt;/p&gt;
&lt;p&gt;码元传输速率又称为波特率、调制速率、波形速率或符号速率。它与比特率有一定关系：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当一个码元只携带1比特的信息量时，则波特率（码元/秒）与比特率（比特/秒）在数值上是相等的；&lt;/li&gt;
&lt;li&gt;当一个码元携带n比特的信息量时，则波特率转换成比特率时，数值要乘以n。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要提高信息传输速率（比特率），就必须设法使每一个码元能携带更多个比特的信息量。这需要采用多元制。&lt;/p&gt;
&lt;p&gt;（考点注意：若没有指明信道频率的上下限，则该信道属于低通信道）&lt;/p&gt;
&lt;p&gt;实际的信道所能传输的最高码元速率，要明显低于奈氏准则给出的这个上限数值。&lt;/p&gt;
&lt;h3 id=&#34;香农公式&#34;&gt;香农公式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;小知识： log₂8  ==  2的多少次方等于8，答案是3次方 2×2×2 = 8&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;带宽受限且由高斯白噪声干扰的信道的极限信息传输速率。&lt;/p&gt;
&lt;p&gt;公式： c = W * log₂（1 +S/N）&lt;/p&gt;
&lt;p&gt;c ： 信道的极限信息传输速率（单位：b/s）&lt;/p&gt;
&lt;p&gt;W : 信道带宽 （单位：Hz）&lt;/p&gt;
&lt;p&gt;S : 信道内所传信号的平均功率&lt;/p&gt;
&lt;p&gt;N : 信道内的高斯噪声功率&lt;/p&gt;
&lt;p&gt;S/N :	信噪比，使用分贝（dB）作为度量单位&lt;/p&gt;
&lt;p&gt;​			信噪比（dB）= 10 * log₁₀（S/N）		（dB）&lt;/p&gt;
&lt;p&gt;信道带宽或信道中信噪比越大，信息的极限传输速率越高。&lt;/p&gt;
&lt;p&gt;在实际信道上能够达到的信息传输速率要比该公式的极限传输速率低不少，这是因为在实际信道中，信号还要受到其他的一些损伤，如各种脉冲干扰、信号在传输中的衰减和失真等，这些因素在香农公式中并未考虑。&lt;/p&gt;
&lt;h3 id=&#34;综合&#34;&gt;综合&lt;/h3&gt;
&lt;p&gt;在信道宽带一定的情况下，根据奈氏准则和香农公式，要想&lt;strong&gt;提高信息的传输速率&lt;/strong&gt;就必须采用&lt;strong&gt;多元制&lt;/strong&gt;（更好的调制方式）和努力&lt;strong&gt;提高信道中的信噪比。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;自从香农公式发表后，各种&lt;strong&gt;新的信号处理和调制方法就不断出现&lt;/strong&gt;，其目的都是为了尽可能地&lt;strong&gt;接近香农公式给出的传输速率极限。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;数据链路层&#34;&gt;数据链路层&lt;/h1&gt;
&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e6%95%b0%e6%8d%ae%e9%93%be%e8%b7%af%e5%b1%821.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;又可以看成是：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e6%95%b0%e6%8d%ae%e9%93%be%e8%b7%af%e5%b1%822.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;链路&lt;/strong&gt;（Link）就是从一个结点到相邻结点的一段物理线路，而中间没有任何其他的交换结点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据链路&lt;/strong&gt;（Data Link）是指把实现通信协议的硬件和软件加到链路上，就构成了数据链路。&lt;/li&gt;
&lt;li&gt;数据链路层以 &lt;strong&gt;帧&lt;/strong&gt; 为单位传输和处理数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用点对点信道的数据链路层&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;三个重要问提：封装成帧、差错检测、可靠传输&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;使用广播信道的数据链路层&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;共享式以太网的媒体接入控制协议CSMA/CD&lt;/li&gt;
&lt;li&gt;802.11局域网的媒体接入控制协议CSMA/CA&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;数据链路层的互联设备&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网桥和交换机的工作原理&lt;/li&gt;
&lt;li&gt;集线器（物理层互联设备）与交换机的区别&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;封装成帧&#34;&gt;封装成帧&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;封装成帧&lt;/strong&gt; 是指数据链路层给上层交付的协议数据单元添加帧头和帧尾使之成为帧&lt;/p&gt;
&lt;p&gt;如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%b0%81%e8%a3%85%e6%88%90%e5%b8%a7.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;帧头和帧尾中包含有重要的控制信息。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例如以太网版本2的MAC帧格式，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e4%bb%a5%e5%a4%aa%e7%bd%912%e7%89%88%e6%9c%acMAC%e5%b8%a7%e6%a0%bc%e5%bc%8f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;点对点协议PPP帧格式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e7%82%b9%e5%af%b9%e7%82%b9PPP%e5%b8%a7%e6%a0%bc%e5%bc%8f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;发送方的数据链路层将上层交付下来的协议数据单元封装成帧后，还要通过物理层将构成帧的各比特转换成点型号发送到传输媒体。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;问题：接收方的数据链路层如何从物理层交付的比特流中提取出一个个的帧？&lt;/p&gt;
&lt;p&gt;答：	使用&lt;strong&gt;帧定界&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;帧头和帧尾的作用之一就是&lt;strong&gt;帧定界&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;点对点协议PPP帧格式中的1字节的标志就是帧定界，假设发送方发送的是PPP帧，比特流中红色部分是帧定界标志！（1字节 ==  1B == 1byte == 8bit） 01111110 就是帧标志&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/PPP%e5%b8%a7%e6%af%94%e7%89%b9%e6%b5%81.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;但并不是每个协议都有帧定界标志！例如以太网V2的MAC帧就没有帧头和帧尾标志，但是以太网的数据链路层封装好MAC帧后，将其交付给物理层，&lt;strong&gt;物理层会在MAC帧前面添加8字节的前导码&lt;/strong&gt;。然后再将比特流装换成电信号发送。&lt;strong&gt;前导码中的前7个字节为前同步码&lt;/strong&gt;，作用是使接收方的时钟同步，&lt;strong&gt;之后的1字节为帧开始定界符&lt;/strong&gt;，表明其后面紧跟着的就是MAC帧。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e4%bb%a5%e5%a4%aa%e7%bd%91V2%e7%9a%84MAC%e5%b8%a7%e7%9a%84%e5%b8%a7%e5%ae%9a%e7%95%8c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;另外，以太网还规定了帧间间隔时间为96比特的发送时间。因此，MAC帧并不需要帧结束定界符。&lt;strong&gt;帧间间隔还有其他作用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e4%bb%a5%e5%a4%aa%e7%bd%91V2%e7%9a%84MAC%e5%b8%a7%e5%b8%a7%e9%97%b4%e9%97%b4%e9%9a%94.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;透明传输&lt;/strong&gt; 是指 &lt;strong&gt;数据链路层对上层交付的传输数据没有任何限制&lt;/strong&gt;，就好像数据链路层不存在一样&lt;/p&gt;
&lt;p&gt;（&lt;strong&gt;数据链路层对上层交付的协议数据单元有限制&lt;/strong&gt;，其内容&lt;strong&gt;不能包含帧定界符&lt;/strong&gt;。但是各种数据链路层协议会想办法解决其中包含的帧定界符，例如在发送帧之前，对帧的数据部分进行扫描，&lt;strong&gt;将帧定界符转义来实现透明传输&lt;/strong&gt;）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C++&#34; data-lang=&#34;C++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//以下代码是假设！不管代码对错是否能运行，理解就好
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1011001101&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100011&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//	上述代码会报错，找不到click()函数，但是我们只想打印出 click() 这个文本
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//	所以需要用 &amp;#39;&amp;#39; 引号 来将 click() 转换成文本 如下：
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//	现在不会报错了，就如同这个例子一样。比特流中也不能包含关键字（帧定界符）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//	所以需要用类似的方式进行转义！
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;click&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mo&#34;&gt;01111110&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//	可以将此函数比喻为帧定界符
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;面向字节的物理链路使用字节填充（或称字符填充）的方法实现透明传输。&lt;/p&gt;
&lt;p&gt;面向比特的物理链路使用比特填充的方法实现透明传输。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hello&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;world&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;为了提高帧的传输效率，应当使帧的数据部分的长度尽可能大些。&lt;/p&gt;
&lt;p&gt;考虑到差错控制等多种因素，每一种数据链路层协议都规定了帧的数据部分的长度上限，即&lt;strong&gt;最大传送单元MTU&lt;/strong&gt;（Maximum Transfer Unit）&lt;/p&gt;
&lt;h2 id=&#34;差错检测&#34;&gt;差错检测&lt;/h2&gt;
&lt;p&gt;实际的通信链路都不是理想的，比特在传输过程中可能会产生差错：1可能会变成0，0可能会变成1。这称为 &lt;strong&gt;比特差错&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在一段时间内，传输错误的比特占所传输的比特总数的比特称为 &lt;strong&gt;误码率BER&lt;/strong&gt;（Bit Error Rate）。&lt;/p&gt;
&lt;p&gt;使用 &lt;strong&gt;差错检测码&lt;/strong&gt; 来检测数据在传输过程中是否产生了比特差错，是数据链路层所要解决的重要问题之一&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;差错码&lt;/strong&gt; 只能检测出帧在传输过程中出现了差错，但并不能定位错误，因此 &lt;strong&gt;无法纠正错误&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;要想纠正传输中的差错，可以使用冗余信息更多的 &lt;strong&gt;纠错码&lt;/strong&gt; 进行 &lt;strong&gt;前向纠错&lt;/strong&gt;。但纠错码的开销比较大，在 &lt;strong&gt;计算机网络中较少使用&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;循环冗余检验 &lt;strong&gt;CRC&lt;/strong&gt; 有很好的检错能力（&lt;strong&gt;漏检率非常低&lt;/strong&gt;），虽然计算比较复杂，但非常 &lt;strong&gt;易于用硬件实现&lt;/strong&gt;，因此被 &lt;strong&gt;广泛应用于数据链路层&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;在计算机网络中通常采用 &lt;strong&gt;检错重传方式来纠正传输中的差错&lt;/strong&gt;，&lt;strong&gt;或者仅仅是丢弃检测到差错的帧&lt;/strong&gt;，这取决于数据链路层向其上层提供的是可靠传输服务还是不可靠传输服务&lt;/p&gt;
&lt;h4 id=&#34;奇偶校验&#34;&gt;奇偶校验&lt;/h4&gt;
&lt;p&gt;​		在待发送的数据后面 &lt;strong&gt;添加1位奇偶校验位&lt;/strong&gt;，使整个数据（包括所添加的校验位在内）中 **“ 1 “ 的个数 **为奇数（奇校验）或偶数（偶校验）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果有&lt;strong&gt;奇数个位发生误码&lt;/strong&gt;，则奇偶性发生变化，&lt;strong&gt;可以检查出误码&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;如果有&lt;strong&gt;偶数个位发生误码&lt;/strong&gt;，则奇偶性不发生变化，&lt;strong&gt;不能检查出误码（漏检）&lt;/strong&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;奇偶校验法的漏检率过高，在计算机网络的数据链路层一般不会采用该方法&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%a5%87%e5%81%b6%e6%a0%a1%e9%aa%8c.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;循环冗余校验crccyclic-redundancy-check&#34;&gt;循环冗余校验CRC（Cyclic Redundancy Check）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;收发双方约定好一个 &lt;strong&gt;生成多项式&lt;/strong&gt; G(x);&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发送方基于待发送的数据和生成多项式计算出差错检测码（冗余码），将其添加到待传输数据的后面一起传输；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收方通过生成多项式来计算收到的数据是否产生了误码；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e7%94%9f%e6%88%90%e5%a4%9a%e9%a1%b9%e5%bc%8f%e4%b8%be%e4%be%8b.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;使用这些生成多项式进行CRC校验，可以达到较好的检错效果，也就是漏检率比较低&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CRC算法要求生成多项式必须包含最低次项。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;异或运算：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%bc%82%e6%88%96%e8%bf%90%e7%ae%97.JPG&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;【&lt;strong&gt;循环冗余检验CRC举例&lt;/strong&gt;】待发送的信息为101001，生成多项式为G(x) = x³  +  x²  +  1 , 计算余数。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一步：构造被除数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;待发送信息后面添加生成多项式最高次数个0	生成多项式中最高次数是x³  则添加三个0&lt;/p&gt;
&lt;p&gt;得：101001000&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第二步：构造除数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;生成多项式各项系数构成的比特串，&lt;/p&gt;
&lt;p&gt;G(x) = x³  +  x²  +  1 还原后得 G(x) =  1·x³ + 1·x² + 0·x¹ + 1·x⁰ ，将系数组合成串得：1101&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第三步：做除法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;商中从左到右第一个数字标记为1表示是从这里开始的，其他的表示是否够除，0表示不够除，1表示够除。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%86%97%e4%bd%99%e8%bf%90%e7%ae%97.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第四步：检查余数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;余数的位数应与生成多项式最高次数相同，如果位数不够，则在余数前补0来凑足位数。&lt;strong&gt;上图中补了两个0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将余数添加到带发送信息的后面就可以发送了，”101001“ + ”001“ == ”101001001“&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;【循环冗余检验CRC举例】接收到的信息为101101001，生成多项式为G(x) =  x³  +  x²  +  1 ,判断传输是否误码？&lt;/p&gt;
&lt;p&gt;​	答案：余数为11，有误码。过程自己算算看&lt;/p&gt;
&lt;h2 id=&#34;可靠传输&#34;&gt;可靠传输&lt;/h2&gt;
&lt;h3 id=&#34;基本概念&#34;&gt;基本概念&lt;/h3&gt;
&lt;p&gt;可靠传输服务：想办法实现&lt;strong&gt;发送端发送什么，接收端就收到什么。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​		一般情况下，有线链路的误码率比较低，为了减小开销，并不要求数据链路层向上提供可靠传输服务。即使出现了误码，可靠传输的问题由其上层处理。&lt;/p&gt;
&lt;p&gt;​		&lt;strong&gt;无线链路&lt;/strong&gt;易受干扰，误码率比较高，因此&lt;strong&gt;要求数据链路层&lt;/strong&gt;必须向上层提供&lt;strong&gt;可靠&lt;/strong&gt;传输服务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;比特差错&lt;/strong&gt;只是传输差错中的一种。（此处将帧的称呼改为了分组）&lt;/p&gt;
&lt;p&gt;从整个计算机网络体系结构来看，传输差错还包括&lt;strong&gt;分组丢失&lt;/strong&gt;、&lt;strong&gt;分组失序&lt;/strong&gt;以及&lt;strong&gt;分组重复&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;分组丢失、分组失序以及分组重复这些传输差错，一般不会出现在数据链路层，而会出现在其上层。因此&lt;strong&gt;可靠传输服务并不局限于数据链路层&lt;/strong&gt;，其他各层均可选择实现可靠传输&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%8f%af%e9%9d%a0%e4%bc%a0%e8%be%93%e4%b8%be%e4%be%8b1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可靠传输的实现比较复杂，开销也比较大，是否使用可靠传输取决于应用需求。&lt;/p&gt;
&lt;h3 id=&#34;可靠传输的三种实现机制&#34;&gt;可靠传输的三种实现机制&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;这三种可靠传输实现机制的基本原理并不局限于数据链路层，可以应用到计算机网络体系结构的各层协议中。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;停止-等待协议sw&#34;&gt;停止-等待协议SW&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%81%9c%e6%ad%a2%e7%ad%89%e5%be%85%e5%8d%8f%e8%ae%aeSW.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;确认与否认&#34;&gt;确认与否认&lt;/h5&gt;
&lt;p&gt;发送方给接收方发送数据分组，接收方进行 &lt;strong&gt;差错检测&lt;/strong&gt; 判断该数据分组&lt;strong&gt;是否有误码&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;若没有误码，则接收该分组，并给发送方发送&lt;strong&gt;确认分组ACK&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;若有误码，则丢弃该数据分组，并给发送方发送&lt;strong&gt;否认分组NAK&lt;/strong&gt;。发送方&lt;strong&gt;接收NAK后&lt;/strong&gt;立刻&lt;strong&gt;重传&lt;/strong&gt;该数据分组。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（&lt;strong&gt;因此发送方每发送完一个数据分组后并不能立刻将该数据分组从缓存中删除，只有收到ACK确认分组后才可以删除&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;发送方每发送完一个数据分组后，就停止发送下一个数据分组，收到ACK确认分组或者NAK否认分组才能进行下一步操作。&lt;/p&gt;
&lt;h5 id=&#34;超时重传&#34;&gt;超时重传&lt;/h5&gt;
&lt;p&gt;假设发送方在发送数据分组的过程中意外&lt;strong&gt;丢失了该数据分组&lt;/strong&gt;，接收方没有收到该分组，发送端也没有收到任何确认或重传指令所以不会发送下一个数据分组。为避免这类事件的发生，可以&lt;strong&gt;在发送端添加一个超时计时器&lt;/strong&gt;，超过一定时间后仍未收到ACK或NAK指令，则&lt;strong&gt;重发该数据分组&lt;/strong&gt;。&lt;/p&gt;
&lt;h5 id=&#34;确认丢失&#34;&gt;确认丢失&lt;/h5&gt;
&lt;p&gt;假设接收端收到数据后发送的&lt;strong&gt;确认分组ACK&lt;/strong&gt;在发送途中意外&lt;strong&gt;丢失&lt;/strong&gt;，而接收端的超时计时器触发使上一个数据分组重复发送。为避免这类事件，可以给发送端发送的数据分组编号，由于停止-等待协议的停等特性，&lt;strong&gt;只需1个比特&lt;/strong&gt;编号就够了，即编号0和1。接收端收到数据分组后发现与上一个收到的数据分组&lt;strong&gt;编号一样便丢弃该分组，向发送端发送确认分组ACK&lt;/strong&gt;。&lt;/p&gt;
&lt;h5 id=&#34;确认迟到&#34;&gt;确认迟到&lt;/h5&gt;
&lt;p&gt;若接收端的确认分组ACK因为某些原因&lt;strong&gt;延迟到达发送端&lt;/strong&gt;，发送端重发数据分组后又发送了下一个数据分组，接收端收到重复的数据分组和下一个数据分组后向发送端发送了两个确认分组ACK,为了避免这类事件，可给确认分组ACK进行编号，所用比特数量&lt;strong&gt;与数据分组编号所用的比特数据量一样&lt;/strong&gt;。发送端收到同样编号的确认分组ACK后会忽略该确认分组&lt;/p&gt;
&lt;p&gt;【&lt;strong&gt;注意事项&lt;/strong&gt;】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接收端检测到数据分组有误码时，将其丢弃并等待发送方的超时重传。但对于误码率较高的点对点链路，为使发送方&lt;strong&gt;尽早重传&lt;/strong&gt;，也可&lt;strong&gt;给发送方发送NAK分组&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;为了让接收方能够判断所收到的数据分组是否是重复的，需要给&lt;strong&gt;数据分组编号&lt;/strong&gt;。由于停止-等待协议的停等特性，&lt;strong&gt;只需1个比特&lt;/strong&gt;编号就够了，即编号0和1。&lt;/li&gt;
&lt;li&gt;为了让发送方能够判断所收到的ACK分组是否是重复的，需要给&lt;strong&gt;ACK分组编号&lt;/strong&gt;。所用比特数量&lt;strong&gt;与数据分组编号所用的比特数据量一样&lt;/strong&gt;。数据链路层一般不会出现ACK分组迟到的情况，因此在&lt;strong&gt;数据链路层实现停止-等待协议可以不用给ACK分组编号。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;超时计时器设置的&lt;strong&gt;重传时间&lt;/strong&gt;应仔细选择。一般可将重传时间选为&lt;strong&gt;略大于 “ 从发送方到接收方的平均往返时间 ”&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;在数据链路层点对点的往返时间比较确定，重传时间比较好设定。&lt;/li&gt;
&lt;li&gt;然而在运输层，由于端到端往返时间非常不确定，设置合适的重传时间有时并不容易。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;停止-等待协议sw信道利用率&#34;&gt;停止-等待协议SW信道利用率&lt;/h5&gt;
&lt;p&gt;T&lt;!-- raw HTML omitted --&gt;d&lt;!-- raw HTML omitted --&gt; ： 发送方发送数据分组所耗费的发送时延 Time Data&lt;/p&gt;
&lt;p&gt;RTT ：收发双方之间的往返时间&lt;/p&gt;
&lt;p&gt;T&lt;!-- raw HTML omitted --&gt;a&lt;!-- raw HTML omitted --&gt; ： 接收方发送确认分组所耗费的发送时延  Time Ack&lt;/p&gt;
&lt;p&gt;图中忽略了接收方对数据分组的处理时延以及发送方对确认分组的处理时延。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/SW%e5%8d%8f%e8%ae%ae%e4%bf%a1%e9%81%93%e5%88%a9%e7%94%a8%e7%8e%87.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;T&lt;!-- raw HTML omitted --&gt;a&lt;!-- raw HTML omitted --&gt; 远小于 T&lt;!-- raw HTML omitted --&gt;d&lt;!-- raw HTML omitted --&gt; 可以忽略，当 RTT 远大于 T&lt;!-- raw HTML omitted --&gt;d&lt;!-- raw HTML omitted --&gt; 时，信道利用率会非常低。&lt;/p&gt;
&lt;p&gt;【举例】假设信道长度2000km，数据分组长度1500B，发送速率10Mbit/s。&lt;/p&gt;
&lt;p&gt;（忽略T&lt;!-- raw HTML omitted --&gt;a&lt;!-- raw HTML omitted --&gt;，因为T&lt;!-- raw HTML omitted --&gt;a&lt;!-- raw HTML omitted --&gt;一般都远小于T&lt;!-- raw HTML omitted --&gt;d&lt;!-- raw HTML omitted --&gt;）&lt;/p&gt;
&lt;p&gt;答：&lt;/p&gt;
&lt;p&gt;​	根据发送时延 = 分组长度（b）/ 发送速率（b/s）&lt;/p&gt;
&lt;p&gt;​			可得出 1500 / 1250,000 = 0.0012s = 1.2ms&lt;/p&gt;
&lt;p&gt;​	根据传播时延 = 信道长度（m）/	电磁波传播速率（m/s）&lt;/p&gt;
&lt;p&gt;​	（为了方便计算使用光纤的传播速度： 2 * 10&lt;!-- raw HTML omitted --&gt;8&lt;!-- raw HTML omitted --&gt; m/s）&lt;/p&gt;
&lt;p&gt;​			可得出 2,000,000 / 3 * 10&lt;!-- raw HTML omitted --&gt;8&lt;!-- raw HTML omitted --&gt; = 0.01 = 10ms&lt;/p&gt;
&lt;p&gt;​			因为是往返时间所以 10 * 2 得 20ms&lt;/p&gt;
&lt;p&gt;​	1.2 / 21.2 = 0.056&amp;hellip;			0.056 * 100 = 5.66%&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/SW%e4%bf%a1%e9%81%93%e5%88%a9%e7%94%a8%e7%8e%87%e4%be%8b%e9%a2%981.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;【举例】主机甲采用停-等协议向主机乙发送数据，数据传输速率是3kbps，单向传播延时是200ms，忽略确认帧的传输延时。当信道利用率等于40%时，数据帧的长度为多少？&lt;/p&gt;
&lt;p&gt;答案：800比特，过程自己算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若出现重传，则对于传送有用的数据信息来说，信道利用率还要降低。&lt;/li&gt;
&lt;li&gt;为了克服停止-等待SW协议信道利用率很低的缺点，就产生了另外两种协议，即 **后退N帧协议GBN **和 &lt;strong&gt;选择重传协议SR&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;像停止-等待协议这种通过确认和重传机制实现的可靠传输协议，常称为&lt;strong&gt;自动请求重传协议ARQ&lt;/strong&gt;（Automatic Repeat reQuest）意思是重传的请求是自动进行的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;回退n帧协议gbn&#34;&gt;回退N帧协议GBN&lt;/h4&gt;
&lt;p&gt;跟SW协议差不多，只是发送方一次&lt;strong&gt;连续发送N个帧&lt;/strong&gt;，而接受方正确有序接收N个帧后&lt;/p&gt;
&lt;p&gt;才会&lt;strong&gt;发送 N [N - 1] 个 ACK&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%9b%9e%e9%80%80N%e5%b8%a7%e5%8d%8f%e8%ae%ae%e5%8f%91%e9%80%81%e6%96%b9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e5%9b%9e%e9%80%80N%e5%b8%a7%e5%8d%8f%e8%ae%ae%e6%8e%a5%e6%94%b6%e6%96%b9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;回退N帧协议在流水线传输的基础上利用发送窗口来限制发送方连续发送数据分组的数量，是一种连续ARQ协议。&lt;/p&gt;
&lt;p&gt;在协议的工作过程中发送窗口和接收窗口不断向前滑动，因此这类协议又称为滑动窗口协议。&lt;/p&gt;
&lt;p&gt;由于回退N帧协议的特性，当通信线路质量不好时，其信道利用率并不比SW协议高。&lt;/p&gt;
&lt;h4 id=&#34;选择重传协议sr&#34;&gt;选择重传协议SR&lt;/h4&gt;
&lt;p&gt;为了进一步提高性能，可设法只重传出现误码的数据分组。因此，接收窗口的尺寸 &lt;strong&gt;W&lt;!-- raw HTML omitted --&gt;R&lt;!-- raw HTML omitted --&gt; 不应再等于 1 （而应大于1）&lt;/strong&gt;，以便&lt;strong&gt;接收方先收下失序到达但无误码并且序号落在接收窗口内的那些数据分组&lt;/strong&gt;，等到所缺分组收齐后再一并送交上层。这就是选择重传协议。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SR协议&lt;/strong&gt;为了使发送方仅重传出现差错的分组，接收方&lt;strong&gt;不能再采用累计确认&lt;/strong&gt;，而需要对每个正确接收到的数据分组进行&lt;strong&gt;逐一确认！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e9%80%89%e6%8b%a9%e9%87%8d%e4%bc%a0%e5%8d%8f%e8%ae%aeSR%e5%8f%91%e9%80%81%e6%96%b9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e9%80%89%e6%8b%a9%e9%87%8d%e4%bc%a0%e5%8d%8f%e8%ae%aeSR%e6%8e%a5%e6%94%b6%e6%96%b9.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;点对点协议ppp&#34;&gt;点对点协议PPP&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;点对点协议PPP&lt;/strong&gt;（&lt;strong&gt;P&lt;/strong&gt;oint-to-&lt;strong&gt;P&lt;/strong&gt;oint &lt;strong&gt;P&lt;/strong&gt;rotocol）是目前使用最广泛的&lt;strong&gt;点对点数据链路层协议&lt;/strong&gt;。也广泛运用于广域网路由器之间的专用线路。&lt;/p&gt;
&lt;p&gt;PPP协议是因特网工程任务组IETF在1992年制定的。经过1992年和1994年的修订，现在的PPP协议已成为因特网的正式标准[RFC1661，RFC1662]。&lt;/p&gt;
&lt;p&gt;PPP协议为在点对点链路传输各种协议数据报提供了一个标准方法，主要由以下三部分构成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对各种协议数据报的封装方法（封装成帧）&lt;/li&gt;
&lt;li&gt;链路控制协议LCP，用于建立、配置以及测试数据链路的连接&lt;/li&gt;
&lt;li&gt;一套网络控制协议NCPs，其中的每一个协议支持不同的网络层协议&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ppp协议帧格式&#34;&gt;PPP协议帧格式：&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;16进制以0x开头，后面跟数字0~9或字母A~F（小写也可以），
如：0x2D（16进制数2D）
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/PPP%e5%8d%8f%e8%ae%ae%e5%b8%a7%e6%a0%bc%e5%bc%8f2.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;ppp协议解决透明传输问题&#34;&gt;PPP协议解决透明传输问题&lt;/h3&gt;
&lt;p&gt;如果帧的数据部分有标志字段F（定界符），那么该怎么让接收方忽略该标志字段呢？&lt;/p&gt;
&lt;p&gt;PPP协议实现透明传输的方法取决于所使用的链路类型&lt;/p&gt;
&lt;p&gt;**面向字节的异步链路：**采用字节填充法，也就是插入转义字符。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;发送方的处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;出现的每一个7E（PPP帧的定界符）字节转变成2字节序列（7D，5E）
&lt;ul&gt;
&lt;li&gt;相当于在7E字节前插入了转义字符7D，并将7E字节减去16进制的20。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;出现的每一个7D（转义字符）字节转变成2字节序列（7D，5D）
&lt;ul&gt;
&lt;li&gt;相当于在7D字节前插入了转义字符7D，并将7D字节减去16进制的20。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;出现的每一个ASCII码控制字符（&lt;strong&gt;数值小于0x20的字符&lt;/strong&gt;），则在该字符前面插入一个7D字节，同时将该字符的编码&lt;strong&gt;加上0x20&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收方的处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进行&lt;strong&gt;反变换&lt;/strong&gt;即可恢复出原来的帧的数据部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/PPP%e5%8d%8f%e8%ae%ae%e9%80%8f%e6%98%8e%e4%bc%a0%e8%be%93%e5%bc%82%e6%ad%a5%e9%93%be%e8%b7%af.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;**面向比特的同步链路：**则采用比特填充法，也就是插入比特0。&lt;/p&gt;
&lt;p&gt;帧定界符 =&amp;gt; 01111110&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;发送方的处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对帧的数据部分进行扫描（一般由硬件实现）。只要发现&lt;strong&gt;5个连续的比特1&lt;/strong&gt;，则立即&lt;strong&gt;填充1个比特0&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接收方的处理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对帧的数据部分进行扫描（一般由硬件实现）。只要发现&lt;strong&gt;5个连续的比特1&lt;/strong&gt;，就&lt;strong&gt;把其后的1个比特0删除&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/PPP%e5%8d%8f%e8%ae%ae%e9%80%8f%e6%98%8e%e4%bc%a0%e8%be%93%e9%9d%a2%e5%90%91%e6%af%94%e7%89%b9%e7%9a%84%e5%90%8c%e6%ad%a5%e9%93%be%e8%b7%af.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;差错检测-1&#34;&gt;差错检测&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/PPP%e5%8d%8f%e8%ae%ae%e5%b7%ae%e9%94%99%e6%a3%80%e6%b5%8b.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;工作状态&#34;&gt;工作状态&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/PPP%e5%8d%8f%e8%ae%ae%e5%b7%a5%e4%bd%9c%e7%8a%b6%e6%80%81.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;媒体介入控制的基本概念&#34;&gt;媒体介入控制的基本概念&lt;/h2&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h3 id=&#34;静态划分信道&#34;&gt;静态划分信道&lt;/h3&gt;
&lt;h3 id=&#34;信道复用&#34;&gt;信道复用&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1c4411d7jb?p=30&amp;amp;spm_id_from=pageDriver&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;计算机网络微课堂（有字幕无背景音乐版）_哔哩哔哩&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;简单理解：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;复用是将单一媒体的频带资源划分成很多子信道，这些子信道之间相互独立，互不干扰。从媒体的整体频带资源上看，每个子信道只占用该媒体频带资源的一部分。&lt;/li&gt;
&lt;li&gt;多址（更确切的应该称为多点接入）处理的是动态分配信道给用户。这在用户仅仅暂时性地占用信道地应用中是必须的，而所有的移动通信系统基本上都属于这种情况。相反，在信道永久性地分配给用户地应用中，多址是不需要的（对于无线广播或电视广播站就是这样）。&lt;/li&gt;
&lt;li&gt;某种程度上，FDMA、TDMA、CDMA可以分别看成FDM、TDM、CDM地应用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见的复用技术有&lt;/p&gt;
&lt;p&gt;频分复用FDM、时分复用TDM、波分复用WDM、码分复用CDM&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;频分复用FDM&lt;/strong&gt; 的所有用户同时占用不同的频带资源并通信。&lt;/p&gt;
&lt;p&gt;​	（广播的频率有很多 就如同一个用户用高频分段，另一个用户用低频分段）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;时分复用TDM&lt;/strong&gt; 的所有用户在不同的时间占用同样的频带宽度。时分复用技术将时间划分成一段段登场的时分复用帧。每一个时分复用的用户在每一个时分复用帧中占用固定序号的时隙。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;波分复用WDM&lt;/strong&gt; 就是光（光纤）的频分复用，具体网上搜吧~&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;码分复用CDM&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;码分复用CDM是另一种共享信道的方法。实际上，由于该技术主要用于多址接入，人们更常用名词是码分多址CDMA（Code Division Multiple Access）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同理，频分复用FDM和时分复用TDM同样可用于多址接入，相应的名词是频分多址FDMA（Frequency Division Multiple Access）和时分多址TDMA（Time Division Multiple Access）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与FDM和TMD不同，CDM的每一个用户可以 &lt;strong&gt;在同样的时间使用同样的频带进行通信&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于 &lt;strong&gt;各用户使用经过特殊挑选的不同码型&lt;/strong&gt;，因此各用户之间 &lt;strong&gt;不会造成干扰&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CDM最初用于军事通信，因为这种系统所发送的信号有很强的抗干扰能力，其频谱类似于白噪声不易敌人被发现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;随着技术的进步，CDMA设备的价格和体积都大幅度下降，因而现在已广泛用于民用的移动通信中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在CDMA中，每一个比特时间再划分为m各短的间隔，称为&lt;strong&gt;码片（Chip）&lt;/strong&gt;。通常m的值是64或128。为了简单起见，在后续的举例中，我们假设m为8。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用CDMA的每一个站被指派一个唯一的 &lt;strong&gt;m bit码片序列（Chip Sequence）&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个站如果要&lt;strong&gt;发送比特1&lt;/strong&gt;，则&lt;strong&gt;发送它自己的 m bit码片序列&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;一个站如果要&lt;strong&gt;发送比特0&lt;/strong&gt;，则&lt;strong&gt;发送它自己的 m bit码片序列的二进制反码&lt;/strong&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【举例】&lt;/p&gt;
&lt;p&gt;​	指派给CDMA系统中某个站点的码片序列为00011011&lt;/p&gt;
&lt;p&gt;​	发送比特1：发送自己的码片序列 00011011&lt;/p&gt;
&lt;p&gt;​	发送比特0：发送自己的码片序列的二进制反码 11100100&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（这种通信方式称为直接序列扩频DSSS）&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;码片序列的挑选原则如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;分配给每个站的码片序列必须各不相同，实际常采用伪随机码序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分配给每个站的码片序列必须相互正交（规格化内积为0）。&lt;/p&gt;
&lt;p&gt;令向量S表示站S的码片序列，令向量T表示其他任何站的码片序列。&lt;/p&gt;
&lt;p&gt;两个不同站S和T的码片序列正交，就是向量S和T的规格化内积为0：&lt;/p&gt;
&lt;p&gt;​	&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/CDMA%e8%a7%84%e6%a0%bc%e5%8c%96%e5%86%85%e7%a7%af%e8%ae%a1%e7%ae%97%e5%85%ac%e5%bc%8f.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;​	&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1gb4y167Ma?from=search&amp;amp;seid=13127755967220187081&amp;amp;spm_id_from=333.337.0.0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;∑：求和符号保姆级教学！&lt;em&gt;哔哩哔哩&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/CDMA%e8%a7%84%e6%a0%bc%e5%8c%96%e5%86%85%e7%a7%af%e5%8f%82%e8%80%83%e5%85%ac%e5%bc%8f.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【习题】假设给站S分配的码片序号为01011101，给站T分配的码片序号为10111000，这样分配正确吗？（为了简单起见，我们假设m为8）&lt;/p&gt;
&lt;p&gt;答：&lt;/p&gt;
&lt;p&gt;​	1. S码片序列和T码片序列符合&lt;strong&gt;码片序列的挑选原则[1]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	2. 向量S和T的规格化内积不为0，不符合&lt;strong&gt;码片序列的挑选原则[2]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;故这样分配不正确！&lt;/p&gt;
&lt;h3 id=&#34;动态接入控制&#34;&gt;动态接入控制&lt;/h3&gt;
&lt;h4 id=&#34;总线局域网使用的csmacd协议&#34;&gt;总线局域网使用的CSMA/CD协议&lt;/h4&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1c4411d7jb?p=31&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;计算机网络微课堂（有字幕无背景音乐版）_哔哩哔哩&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;载波监听多址接入/碰撞检测 CSMA/CD（Carrier Sense Multiple Access / Collision Detection）&lt;/p&gt;
&lt;h4 id=&#34;无线局域网使用的csmaca协议&#34;&gt;无线局域网使用的CSMA/CA协议&lt;/h4&gt;
&lt;p&gt;载波监听多址接入/碰撞避免 CSMA/CA（Carrier Sense Multiple Access / Collision Avoidance）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在无线局域网中，仍然可以使用载波监听多址接入CSMA&lt;/strong&gt;，即再发送帧之前先对传输媒体进行载波监听。若发现有其他站再发送帧，就推迟发送以免发生碰撞。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在无线局域网中，不能使用碰撞检测CD，原因如下&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;由于无线信道的传输条件特殊，其信号强度的动态范围非常大，无线网卡上接收到的信号强度往往会远远小于发送信号的强度（可能相差百万倍）。&lt;strong&gt;如果要在无线网卡上实现碰撞检测CD，对硬件的要求非常高&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;即使能够在硬件上实现无线局域网的碰撞检测功能，但由于无线电波传播的特殊性**（存在隐蔽站问题），进行碰撞检测的意义也不大**。如图所示：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/CDMA_CA%e9%9a%90%e8%94%bd%e7%ab%99.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;802.11无线局域网&lt;/strong&gt;使用CSMA/CA协议，在CSMA的基础上增加了一个碰撞避免CA功能，而不再实现碰撞检测功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;由于&lt;strong&gt;不可能避免所有的碰撞&lt;/strong&gt;，并且&lt;strong&gt;无线信道误码率较高&lt;/strong&gt;，802.11标准还使用了**数据链路层确认机制（停止-等待协议）**来保证数据被正确接收。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;802.11的MAC层标准定义了两种不同的媒体接入控制方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分布式协调功能DCF（Distributed Coordination Function）。在DCF方式下，没有中心控制站点，每个站点使用CSMA/CA协议通过征用信道来获取发送权，这是802.11定义的默认方式。&lt;/li&gt;
&lt;li&gt;点协调功能PCF（Point Coordination Function）。PCF方式使用集中控制的接入算法（一般在接入点AP实现集中控制），802.11定义的可选方式，在实际中较少使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;802.11标准规定，所有的&lt;strong&gt;站点必须在持续监测到信道空闲一段指定时间后才能发送帧&lt;/strong&gt;，这段时间称为&lt;strong&gt;帧间间隔IFS（Inter Frame Space）&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;帧间间隔的长短取决于该站点要发送的帧的类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高优先级帧需要等待的时间较短，因此可优先获得发送权；&lt;/li&gt;
&lt;li&gt;低优先级帧需要等待的时间较长。若某个站的低优先级帧还没来得及发送，而其他站的高优先级帧已发送到信道上，则信道变为忙态，因而低优先级帧就只能再推迟发送了。这样就减少了发生碰撞的机会。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常见的两种帧间间隔如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;短帧间间隔SIFS（28μs）,是最短的帧间间隔，用来分隔开属于一次对话的各帧。一个站点应当能够在这段时间内从发送方式切换到接收方式。使用SIFS的帧类型有ACK帧、CTS帧、由过长的MAC帧分片后的数据帧、以及所有回答AP探询的帧和在PCF方式中接入点AP发送出的任何帧。&lt;/li&gt;
&lt;li&gt;DCF帧间间隔DIFS（128μs），它比短帧间间隔SIFS要长得多，在DCF方式中用来发送数据帧和管理帧。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;csmaca协议的工作原理&#34;&gt;CSMA/CA协议的工作原理&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/CSMA_CA%e5%8d%8f%e8%ae%ae%e7%9a%84%e5%b7%a5%e4%bd%9c%e5%8e%9f%e7%90%86.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CSMA/CA协议的退避算法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在执行退避算法时，站点为退避计时器设置一个随机的退避时间：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当退避计时器的时间减小到零时，就开始发送数据；&lt;/li&gt;
&lt;li&gt;当退避计时器的时间还未减小到零时而信道又转变为忙状态，这时就冻结退避计时器的数值，重新等待信道变为空闲，再经过时间DIFS后，继续启动退避计时器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在进行第 &lt;strong&gt;i&lt;/strong&gt; 次退避时，退避时间在时隙编号{0，1，&amp;hellip;，2&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;2 + i &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; -1}中随机选择一个，然后乘以基本退避时间（也就是一个时隙的长度）就可以得到随机的退避时间。这样做是为了使不同站点选择相同退避时间的概率减少。当时隙编号达到255时（对应于第6次退避）就不再增加了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/CSMA_CA%e5%8d%8f%e8%ae%ae%e7%9a%84%e9%80%80%e9%81%bf%e7%ae%97%e6%b3%95.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当站点检测到信道是空闲的，并且所发送的数据帧不是成功发送完上一个数据帧之后立即连续发送的数据帧，则不使用退避算法。&lt;/li&gt;
&lt;li&gt;以下情况必须使用退避算法：
&lt;ul&gt;
&lt;li&gt;在发送数据帧之前检测到信道处于忙状态时；&lt;/li&gt;
&lt;li&gt;在每一次重传一个数据帧时；&lt;/li&gt;
&lt;li&gt;在每一次成功发送后要连续发送下一个帧时（这是为了避免一个站点长时间占用信道）；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;csmaca协议的信道预约和虚拟载波监听&#34;&gt;CSMA/CA协议的信道预约和虚拟载波监听&lt;/h5&gt;
&lt;p&gt;为了&lt;strong&gt;尽可能减少碰撞的概率&lt;/strong&gt;和降低碰撞的影响，802.11标准允许要发送数据的站点&lt;strong&gt;对信道进行预约&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;（1）源站再发送数据帧之前先发送一个短的控制帧，称为&lt;strong&gt;请求发送RTS（Request To Send）&lt;/strong&gt;，它包括源地址、目的地址以及这次通信（包括相应的确认帧）所需的持续时间。&lt;/p&gt;
&lt;p&gt;（2）若目的站正确收到源站发来的RTS帧，且媒体空闲，就发送一个响应控制帧，称为&lt;strong&gt;允许发送CTS（Clear To Send）&lt;/strong&gt;，他也包括这次通信所需的持续时间（从RTS帧中将此持续时间复制到CTS帧中）。&lt;/p&gt;
&lt;p&gt;（3）源站收到CTS帧后，再等待一段时间SIFS后，就可发送其数据帧。&lt;/p&gt;
&lt;p&gt;（4）若目的站正确收到了源站发来的数据帧，在等待时间SIFS后，就向源站发送确认帧ACK。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;除源站和目的站以外的其他各站，在收到CTS帧（或数据帧）后就推迟接入到无线局域网中。这样就保证了源站和目的站之间的通信不会受到其他站的干扰。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果RTS帧发生碰撞，源站就收不到CTS帧，需执行退避算法重传RTS帧。&lt;/p&gt;
&lt;p&gt;由于&lt;strong&gt;RTS帧和CTS帧很短，发送碰撞的概率，碰撞产生的开销及本身的开销都很小&lt;/strong&gt;。而对于一般的数据帧，其发送时延往往大于传播时延（因为是局域网），碰撞的概率很大，且一旦发生碰撞而导致数据帧重发，则浪费的时间就越多，因此&lt;strong&gt;用很小的代价对信道进行预约往往是最值得的&lt;/strong&gt;。802.11标准规定了3钟情况供用户选择：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用RTS帧和CTS帧&lt;/li&gt;
&lt;li&gt;另一种是不使用RTS帧和CTS帧&lt;/li&gt;
&lt;li&gt;只有当数据帧的长度超过某一数值时才使用RTS帧和CTS帧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除RTS帧和CTS帧会携带通信需要持续的时间，数据帧也能携带通信需要持续的时间，这称为802.11的&lt;strong&gt;虚拟载波监听机制&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;由于利用虚拟载波监听机制，&lt;strong&gt;站点只要监听到RTS帧、CTS帧或数据帧中的任何一个，就能知道信道被占用的持续时间&lt;/strong&gt;，而不需要真正监听到信道上的信号，因此&lt;strong&gt;虚拟载波监听机制能减少隐蔽站带来的碰撞问题&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&#34;mac地址ip地址arp协议&#34;&gt;MAC地址、IP地址、ARP协议&lt;/h1&gt;
&lt;p&gt;MAC地址是以太网的MAC子层所使用的地址；（属于数据链路层的范畴）&lt;/p&gt;
&lt;p&gt;IP地址是TCP/IP体系结构网际层所使用的地址；&lt;/p&gt;
&lt;p&gt;ARP协议属于TCP/IP体系结构的网际层，其作用是已知设备所分配到的IP地址，使用ARP协议可以通过该IP地址获取到设备的MAC地址；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;尽管IP地址和ARP协议属于TCP/IP体系结构的网际层（而不属于数据链路层），但是它们与MAC地址存在一定的关系，并且我们日常的网络应用都离不开MAC地址、IP地址以及ARP协议。因此我们将这三者放在一起讨论&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;mac地址&#34;&gt;MAC地址&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;MAC地址是以太网的MAC子层所使用的地址；（属于数据链路层的范畴）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用点对点信道的数据链路层不需要使用地址，&lt;/p&gt;
&lt;p&gt;而使用广播信道的数据链路层必须使用地址来区分各主机，也就是说当多个主机连接在同一个广播信道上，要想实现两个主机之间的通信，则每个主机都必须有一个唯一的标识，即一个数据链路层地址；&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/MAC%e5%9c%b0%e5%9d%80%e4%b8%be%e4%be%8b.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;在每个主机发送的&lt;strong&gt;帧中必须携带标识发送主机和接收主机的地址&lt;/strong&gt;。由于这类地址是用于媒体接入控制MAC（Media Access Control），因此这类地址被称为&lt;strong&gt;MAC地址&lt;/strong&gt;；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MAC地址一般被固化在网卡（网络适配器）的电可擦可编程只读储存器EEPROM中，因此MAC地址也被称为&lt;strong&gt;硬件地址&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;MAC地址有时被称为&lt;strong&gt;物理地址&lt;/strong&gt;。但这并不意味着MAC地址属于网络体系结构中的物理层！&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一般情况下，用户主机会包括两个网络适配器：有线局域网适配器（有线网卡）和无线局域网适配器（无线网卡）。每个网络适配器都有一个全球唯一的MAC地址。而交换机和路由器往往拥有更多的网络接口，所以会拥有更多的MAC地址。综上所述，&lt;strong&gt;严格来说，MAC地址是对网络上各接口的唯一标识，而不是对网络上各设备的唯一标识&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;ieee-802局域网的mac地址格式&#34;&gt;IEEE 802局域网的MAC地址格式&lt;/h3&gt;
&lt;p&gt;由48个比特构成，每8个比特为1个字节，从左至右依次为第一字节到第六字节。&lt;/p&gt;
&lt;p&gt;前三个字节是组织唯一标识符OUI，由IEEE的注册管理机构分配。&lt;/p&gt;
&lt;p&gt;后三个字节是网络接口标识符，由获得OUI的厂商自行随意分配。&lt;/p&gt;
&lt;p&gt;这种地址标识符称为扩展的唯一标识符EUI，对于48比特的MAC地址，可称为EUI-48。&lt;/p&gt;
&lt;p&gt;MAC地址的标准表示方法是将每4个比特写成一个16进制的字符，共12个字符，将每两个字符分成一组，共6租&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/IEEE802%e5%b1%80%e5%9f%9f%e7%bd%91%e7%9a%84MAC%e5%9c%b0%e5%9d%80%e6%a0%bc%e5%bc%8f.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;（可以在IEEE的官方网站查看已分配的OUI，www.standards-oui.ieee.org/oui.txt）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/802%e5%b1%80%e5%9f%9f%e7%bd%91MAC%e5%9c%b0%e5%9d%80%e7%9a%84%e6%95%b0%e9%87%8f%e5%8d%a0%e6%af%94.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;对于使用EUI-48空间的应用程序，IEEE的目标寿命为100年（直到2080年），但是鼓励采用EUI-64作为替代。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MAC地址的发送顺序&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;字节发送顺序： 第一字节 到 第六字节&lt;/p&gt;
&lt;p&gt;字节内的比特发送顺序：b0 =&amp;gt; b7&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单播MAC地址举例&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;简单理解：单播就是给一个目的地发送信息&lt;/p&gt;
&lt;p&gt;假设有ABC三个主机&lt;/p&gt;
&lt;p&gt;主机B要给主机C发送信息，首先要构建该单播帧，在帧首部中的目的地址字段，填入C的MAC地址，源地址字段填入自己的MAC地址，再加上帧首部中的其他字段， 数据载荷以及帧尾部就构成了单播帧，发送方将该单播帧发送出去后，主机A和C都会接收到该单播帧，主机A的网卡发现该单播帧的目的MAC地址与自己的MAC地址不匹配，于是丢弃该帧。而主机C的网卡发现该单播帧的目的MAC地址于自己的MAC地址相匹配便接收该帧，并将该帧交给上层处理。。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;广播MAC地址举例&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;简单理解：广播就是给所有目的地发送信息（范围内）&lt;/p&gt;
&lt;p&gt;假设有ABC三个主机&lt;/p&gt;
&lt;p&gt;主机B要发送广播帧，首先要构建该广播帧，在帧首部中的目的地址字段填入广播地址，也就是16进制的全F，源地址字段填入自己的MAC地址，再加上帧首部中的其他字段，数据载荷以及帧尾部，就构成了该广播帧。主机B将该广播帧发送出去，A和C都会收到该广播帧，发现帧首部中的目的地址字段的内容是广播地址，就知道该帧是广播帧，接收该帧，并将该帧交给上层处理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;多播MAC地址举例&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;简单理解：多播就是给多个目的地发送消息&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;随机MAC地址：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于可以通过MAC地址查询到用户的精确位置，所以就出现了随机MAC地址&lt;/p&gt;
&lt;h2 id=&#34;ip地址&#34;&gt;IP地址&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;IP地址是TCP/IP体系结构网际层所使用的地址；&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;ip地址的作用&#34;&gt;IP地址的作用&lt;/h3&gt;
&lt;p&gt;IP地址是因特网（Internet）上的主机和路由器所使用的地址，用于标识两部分信息：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;网络编号：标识因特网上数以百万计的网络&lt;/li&gt;
&lt;li&gt;主机编号：标识同意网络上不同主机（或路由器接口）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IP地址具备区分不同网络的功能，如果主机所在的网络要接入因特网，则IP地址和MAC地址都需要使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e7%bd%91%e7%bb%9c%e4%bd%93%e7%b3%bb%e7%bb%93%e6%9e%84%e7%9c%8bIP%e5%9c%b0%e5%9d%80.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;数据包转发过程中IP地址与MAC地址的变化情况：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://locter-picture.oss-cn-beijing.aliyuncs.com/netWorkStudy/%e6%95%b0%e6%8d%ae%e5%8c%85%e8%bd%ac%e5%8f%91%e8%bf%87%e7%a8%8b%e4%b8%adIP%e5%9c%b0%e5%9d%80%e5%92%8cMAC%e5%9c%b0%e5%9d%80%e7%9a%84%e5%8f%98%e5%8c%96.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数据包转发过程中&lt;strong&gt;源IP地址和目的IP地址保持不变&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;数据包转发过程中&lt;strong&gt;源MAC地址和目的MAC地址逐个链路（或逐个网络）改变&lt;/strong&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;arp协议&#34;&gt;ARP协议&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ARP协议属于TCP/IP体系结构的网际层，其作用是已知设备所分配到的IP地址，使用ARP协议可以通过该IP地址获取到设备的MAC地址&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
